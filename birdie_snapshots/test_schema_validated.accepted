---
version: 1.2.6
title: test schema validated
file: ./test/schema/schema.gleam
test_name: make_executable_schema_test
---
ExecutableSchema(
  None,
  ExecutableNamedType(True, "Query"),
  Some(ExecutableNamedType(
    True,
    "Mutation",
  )),
  Some(ExecutableNamedType(
    True,
    "Subscription",
  )),
  dict.from_list([
    #(
      "Boolean",
      ScalarTypeDef(ExecutableScalarTypeDef(
        "Boolean",
        None,
        [],
      )),
    ),
    #(
      "Comment",
      ObjectTypeDef(ExecutableObjectTypeDef(
        "Comment",
        None,
        [],
        ["Node", "Timestamped"],
        dict.from_list([
          #(
            "author",
            ExecutableFieldDef(
              "author",
              None,
              NamedType(ExecutableNamedType(
                False,
                "User",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "createdAt",
            ExecutableFieldDef(
              "createdAt",
              None,
              NamedType(ExecutableNamedType(
                False,
                "DateTime",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "id",
            ExecutableFieldDef(
              "id",
              None,
              NamedType(ExecutableNamedType(
                False,
                "ID",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "post",
            ExecutableFieldDef(
              "post",
              None,
              NamedType(ExecutableNamedType(
                False,
                "Post",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "text",
            ExecutableFieldDef(
              "text",
              None,
              NamedType(ExecutableNamedType(
                False,
                "String",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "updatedAt",
            ExecutableFieldDef(
              "updatedAt",
              None,
              NamedType(ExecutableNamedType(
                True,
                "DateTime",
              )),
              dict.from_list([]),
              [],
            ),
          ),
        ]),
      )),
    ),
    #(
      "DateTime",
      ScalarTypeDef(ExecutableScalarTypeDef(
        "DateTime",
        None,
        [],
      )),
    ),
    #(
      "Float",
      ScalarTypeDef(ExecutableScalarTypeDef(
        "Float",
        None,
        [],
      )),
    ),
    #(
      "ID",
      ScalarTypeDef(ExecutableScalarTypeDef(
        "ID",
        None,
        [],
      )),
    ),
    #(
      "Int",
      ScalarTypeDef(ExecutableScalarTypeDef(
        "Int",
        None,
        [],
      )),
    ),
    #(
      "Mutation",
      ObjectTypeDef(ExecutableObjectTypeDef(
        "Mutation",
        None,
        [],
        [],
        dict.from_list([
          #(
            "createComment",
            ExecutableFieldDef(
              "createComment",
              None,
              NamedType(ExecutableNamedType(
                False,
                "Comment",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "createPost",
            ExecutableFieldDef(
              "createPost",
              None,
              NamedType(ExecutableNamedType(
                False,
                "Post",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "createUser",
            ExecutableFieldDef(
              "createUser",
              None,
              NamedType(ExecutableNamedType(
                False,
                "User",
              )),
              dict.from_list([]),
              [
                ExecutableConstDirective(
                  "auth",
                  dict.from_list([]),
                ),
              ],
            ),
          ),
          #(
            "updateUser",
            ExecutableFieldDef(
              "updateUser",
              None,
              NamedType(ExecutableNamedType(
                False,
                "User",
              )),
              dict.from_list([]),
              [
                ExecutableConstDirective(
                  "auth",
                  dict.from_list([]),
                ),
              ],
            ),
          ),
        ]),
      )),
    ),
    #(
      "Node",
      InterfaceTypeDef(ExecutableInterfaceTypeDef(
        "Node",
        None,
        [],
        [],
        dict.from_list([
          #(
            "id",
            ExecutableFieldDef(
              "id",
              None,
              NamedType(ExecutableNamedType(
                False,
                "ID",
              )),
              dict.from_list([]),
              [],
            ),
          ),
        ]),
      )),
    ),
    #(
      "Post",
      ObjectTypeDef(ExecutableObjectTypeDef(
        "Post",
        None,
        [],
        ["Node", "Timestamped"],
        dict.from_list([
          #(
            "author",
            ExecutableFieldDef(
              "author",
              None,
              NamedType(ExecutableNamedType(
                False,
                "User",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "comments",
            ExecutableFieldDef(
              "comments",
              None,
              ListType(ExecutableListType(
                False,
                NamedType(ExecutableNamedType(
                  False,
                  "Comment",
                )),
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "content",
            ExecutableFieldDef(
              "content",
              None,
              NamedType(ExecutableNamedType(
                True,
                "String",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "createdAt",
            ExecutableFieldDef(
              "createdAt",
              None,
              NamedType(ExecutableNamedType(
                False,
                "DateTime",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "id",
            ExecutableFieldDef(
              "id",
              None,
              NamedType(ExecutableNamedType(
                False,
                "ID",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "published",
            ExecutableFieldDef(
              "published",
              None,
              NamedType(ExecutableNamedType(
                False,
                "Boolean",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "tags",
            ExecutableFieldDef(
              "tags",
              None,
              ListType(ExecutableListType(
                True,
                NamedType(ExecutableNamedType(
                  False,
                  "String",
                )),
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "title",
            ExecutableFieldDef(
              "title",
              None,
              NamedType(ExecutableNamedType(
                False,
                "String",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "updatedAt",
            ExecutableFieldDef(
              "updatedAt",
              None,
              NamedType(ExecutableNamedType(
                True,
                "DateTime",
              )),
              dict.from_list([]),
              [],
            ),
          ),
        ]),
      )),
    ),
    #(
      "Query",
      ObjectTypeDef(ExecutableObjectTypeDef(
        "Query",
        None,
        [],
        [],
        dict.from_list([
          #(
            "node",
            ExecutableFieldDef(
              "node",
              None,
              NamedType(ExecutableNamedType(
                True,
                "Node",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "post",
            ExecutableFieldDef(
              "post",
              None,
              NamedType(ExecutableNamedType(
                True,
                "Post",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "posts",
            ExecutableFieldDef(
              "posts",
              None,
              ListType(ExecutableListType(
                False,
                NamedType(ExecutableNamedType(
                  False,
                  "Post",
                )),
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "search",
            ExecutableFieldDef(
              "search",
              None,
              ListType(ExecutableListType(
                False,
                NamedType(ExecutableNamedType(
                  False,
                  "SearchResult",
                )),
              )),
              dict.from_list([]),
              [
                ExecutableConstDirective(
                  "auth",
                  dict.from_list([]),
                ),
              ],
            ),
          ),
          #(
            "user",
            ExecutableFieldDef(
              "user",
              None,
              NamedType(ExecutableNamedType(
                True,
                "User",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "users",
            ExecutableFieldDef(
              "users",
              None,
              ListType(ExecutableListType(
                False,
                NamedType(ExecutableNamedType(
                  False,
                  "User",
                )),
              )),
              dict.from_list([]),
              [],
            ),
          ),
        ]),
      )),
    ),
    #(
      "Role",
      EnumTypeDef(ExecutableEnumTypeDef(
        "Role",
        None,
        [],
        [
          ExecutableEnumMember(
            "ADMIN",
            None,
            [],
          ),
          ExecutableEnumMember(
            "USER",
            None,
            [],
          ),
          ExecutableEnumMember(
            "GUEST",
            None,
            [],
          ),
        ],
      )),
    ),
    #(
      "SearchResult",
      UnionTypeDef(ExecutableUnionTypeDef(
        "SearchResult",
        None,
        [],
        ["User", "Post", "Comment"],
      )),
    ),
    #(
      "String",
      ScalarTypeDef(ExecutableScalarTypeDef(
        "String",
        None,
        [],
      )),
    ),
    #(
      "Subscription",
      ObjectTypeDef(ExecutableObjectTypeDef(
        "Subscription",
        None,
        [],
        [],
        dict.from_list([
          #(
            "commentAdded",
            ExecutableFieldDef(
              "commentAdded",
              None,
              NamedType(ExecutableNamedType(
                False,
                "Comment",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "postCreated",
            ExecutableFieldDef(
              "postCreated",
              None,
              NamedType(ExecutableNamedType(
                False,
                "Post",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "userCreated",
            ExecutableFieldDef(
              "userCreated",
              None,
              NamedType(ExecutableNamedType(
                False,
                "User",
              )),
              dict.from_list([]),
              [],
            ),
          ),
        ]),
      )),
    ),
    #(
      "Timestamped",
      InterfaceTypeDef(ExecutableInterfaceTypeDef(
        "Timestamped",
        None,
        [],
        [],
        dict.from_list([
          #(
            "createdAt",
            ExecutableFieldDef(
              "createdAt",
              None,
              NamedType(ExecutableNamedType(
                False,
                "DateTime",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "updatedAt",
            ExecutableFieldDef(
              "updatedAt",
              None,
              NamedType(ExecutableNamedType(
                True,
                "DateTime",
              )),
              dict.from_list([]),
              [],
            ),
          ),
        ]),
      )),
    ),
    #(
      "User",
      ObjectTypeDef(ExecutableObjectTypeDef(
        "User",
        None,
        [],
        ["Node", "Timestamped"],
        dict.from_list([
          #(
            "createdAt",
            ExecutableFieldDef(
              "createdAt",
              None,
              NamedType(ExecutableNamedType(
                False,
                "DateTime",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "email",
            ExecutableFieldDef(
              "email",
              None,
              NamedType(ExecutableNamedType(
                False,
                "String",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "id",
            ExecutableFieldDef(
              "id",
              None,
              NamedType(ExecutableNamedType(
                False,
                "ID",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "name",
            ExecutableFieldDef(
              "name",
              None,
              NamedType(ExecutableNamedType(
                False,
                "String",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "posts",
            ExecutableFieldDef(
              "posts",
              None,
              ListType(ExecutableListType(
                True,
                NamedType(ExecutableNamedType(
                  False,
                  "Post",
                )),
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "role",
            ExecutableFieldDef(
              "role",
              None,
              NamedType(ExecutableNamedType(
                False,
                "Role",
              )),
              dict.from_list([]),
              [],
            ),
          ),
          #(
            "updatedAt",
            ExecutableFieldDef(
              "updatedAt",
              None,
              NamedType(ExecutableNamedType(
                True,
                "DateTime",
              )),
              dict.from_list([]),
              [],
            ),
          ),
        ]),
      )),
    ),
    #(
      "UserInput",
      InputTypeDef(ExecutableInputTypeDef(
        "UserInput",
        None,
        [],
        dict.from_list([
          #(
            "email",
            ExecutableInputValueDef(
              None,
              "email",
              NamedType(ExecutableNamedType(
                False,
                "String",
              )),
              [],
              None,
            ),
          ),
          #(
            "name",
            ExecutableInputValueDef(
              None,
              "name",
              NamedType(ExecutableNamedType(
                False,
                "String",
              )),
              [],
              None,
            ),
          ),
          #(
            "role",
            ExecutableInputValueDef(
              None,
              "role",
              NamedType(ExecutableNamedType(
                True,
                "Role",
              )),
              [],
              Some(ExecutableConstScalar(ExecutableEnumVal("USER"))),
            ),
          ),
        ]),
      )),
    ),
  ]),
  dict.from_list([
    #(
      "auth",
      DirectiveDef(
        "auth",
        None,
        dict.from_list([
          #(
            "requires",
            ExecutableInputValueDef(
              None,
              "requires",
              NamedType(ExecutableNamedType(
                True,
                "Role",
              )),
              [],
              Some(ExecutableConstScalar(ExecutableEnumVal("ADMIN"))),
            ),
          ),
        ]),
        [
          TypeSystemDirectiveLocation(FieldDefinitionDirective),
          TypeSystemDirectiveLocation(ObjectDirective),
        ],
        False,
      ),
    ),
    #(
      "deprecated",
      DirectiveDef(
        "deprecated",
        None,
        dict.from_list([
          #(
            "reason",
            ExecutableInputValueDef(
              None,
              "reason",
              NamedType(ExecutableNamedType(
                True,
                "String",
              )),
              [],
              Some(ExecutableConstScalar(ExecutableStringVal("No longer supported"))),
            ),
          ),
        ]),
        [
          TypeSystemDirectiveLocation(FieldDefinitionDirective),
          TypeSystemDirectiveLocation(EnumValueDirective),
        ],
        False,
      ),
    ),
    #(
      "include",
      DirectiveDef(
        "include",
        None,
        dict.from_list([
          #(
            "if",
            ExecutableInputValueDef(
              None,
              "if",
              NamedType(ExecutableNamedType(
                False,
                "Boolean",
              )),
              [],
              None,
            ),
          ),
        ]),
        [
          ExecutableDirectiveLocation(FieldDirective),
          ExecutableDirectiveLocation(FragmentSpreadDirective),
          ExecutableDirectiveLocation(InlineFragmentDirective),
        ],
        False,
      ),
    ),
    #(
      "skip",
      DirectiveDef(
        "skip",
        None,
        dict.from_list([
          #(
            "if",
            ExecutableInputValueDef(
              None,
              "if",
              NamedType(ExecutableNamedType(
                False,
                "Boolean",
              )),
              [],
              None,
            ),
          ),
        ]),
        [
          ExecutableDirectiveLocation(FieldDirective),
          ExecutableDirectiveLocation(FragmentSpreadDirective),
          ExecutableDirectiveLocation(InlineFragmentDirective),
        ],
        False,
      ),
    ),
    #(
      "specifiedBy",
      DirectiveDef(
        "specifiedBy",
        None,
        dict.from_list([
          #(
            "url",
            ExecutableInputValueDef(
              None,
              "url",
              NamedType(ExecutableNamedType(
                False,
                "String",
              )),
              [],
              None,
            ),
          ),
        ]),
        [
          TypeSystemDirectiveLocation(ScalarDirective),
        ],
        False,
      ),
    ),
  ]),
  [],
)